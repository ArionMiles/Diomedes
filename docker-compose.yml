version: "3"
services:
  nginx:
    image: nginx:mainline
    container_name: diomedes_nginx
    volumes:
      - $PWD/conf.d:/etc/nginx/conf.d
      - ./static:/app/static
      - "/etc/localtime:/etc/localtime:ro"
      - $PWD/data/certbot/conf:/etc/letsencrypt
      - $PWD//data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - dioapp
    links:
      - "dioapp:dioapp"
    
  certbot:
    image: certbot/certbot
    volumes:
      - $PWD/data/certbot/conf:/etc/letsencrypt
      - $PWD/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  dioredis:
    image: redis:4-alpine
    # Change "defaultpass" to a more secure password
    command: redis-server --requirepass defaultpass
    ports:
      - "6379:6379"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - ./data:/data

  dioapp:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: diomedes
    container_name: diomedes_web
    links:
      - "dioredis:dioredis"
      - "diodb:diodb"
    depends_on:
      - dioredis
      - diodb
    volumes:
      - ./static:/app/static
      - "/etc/localtime:/etc/localtime:ro"
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=diomedes.settings.production

  diocelery:
    image: diomedes
    container_name: diomedes_celery_b
    command: ['celery', '-A', 'diomedes', 'worker','-B', '-l', 'info']
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - .:/app
    depends_on:
      - dioredis
      - diodb
    links:
     - "dioredis:dioredis"
     - "diodb:diodb"
  
  diodb:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: defaultpass # Change this to something secure
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
